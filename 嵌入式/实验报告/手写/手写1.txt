// GPIO端口初始化任务（用于检测按键的引脚设置为合适的GPIO输入模式，用于驱动发光二极管的引脚设置为合适的GPIO输出模式）


#include "stm32f10x.h"
#define KEY_ON  0
#define KEY_OFF 1

void Delay(__IO u32 nCount) {
    for(; nCount != 0; nCount--);
} 

// 配置按键用到的I/O口
void Key_GPIO_Config(void) {
    GPIO_InitTypeDef GPIO_InitStructure;
    /* 开启按键端口PA的时钟 */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_4 |GPIO_Pin_8 |GPIO_Pin_11; 
    // GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz; 
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; 
    GPIO_Init(GPIOA, &GPIO_InitStructure);
}

// 检测是否有按键按下
// KEY_OFF(没按下按键)、KEY_ON（按下按键）
uint8_t Key_Scan(GPIO_TypeDef* GPIOx,u16 GPIO_Pin) { 
    /* 检测是否有按键按下 */
    if(GPIO_ReadInputDataBit(GPIOx,GPIO_Pin) == KEY_ON ) {      
        Delay(10000); /* 延时消抖 */
        if(GPIO_ReadInputDataBit(GPIOx,GPIO_Pin) == KEY_ON ) {    
            /* 等待按键释放 */
            while(GPIO_ReadInputDataBit(GPIOx,GPIO_Pin) == KEY_ON);   
            return  KEY_ON;  
        }
        else return KEY_OFF;
    }
    else return KEY_OFF;
}


int main(void){

    GPIO_InitTypeDef GPIO_InitStructure;

    /* 配置2个LED灯的引脚为输出模式 */
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_2;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
    GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
    GPIO_Init(GPIOC, &GPIO_InitStructure);

    /* 配置4个独立按键的引脚为输入模式 */
    Key_GPIO_Config();

    while(1){
        /* 读取4个独立按键状态并根据按键编号控制相应的LED */
        if(Key_Scan(GPIOA, GPIO_Pin_1) == KEY_ON)
            GPIO_SetBits(GPIOC, GPIO_Pin_0);
        if(Key_Scan(GPIOA, GPIO_Pin_4) == KEY_ON)
            GPIO_SetBits(GPIOC, GPIO_Pin_2);
        if(Key_Scan(GPIOA, GPIO_Pin_8) == KEY_ON)
            GPIO_SetBits(GPIOC, GPIO_Pin_0);
        if(Key_Scan(GPIOA, GPIO_Pin_11) == KEY_ON)
            GPIO_SetBits(GPIOC, GPIO_Pin_2);
    }
}

