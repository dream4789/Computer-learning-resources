## 原生ajax

```javascript
<script type="text/javascript">
    const btn = document.getElementsByTagName('button')[0];
    const result = document.getElementById('result');
    // console.log(btn);

    btn.onclick = function () {
        console.log("点击");
        // 创建对象
        const xhr = new XMLHttpRequest();
        // 初始化，设置请求方法和 URL
        // xhr.open('GET', 'http://localhost:8000/express_ajax');
        // xhr.open('GET', 'http://localhost:8000/express_ajax?a=100&b=200&c=300');
        // xhr.open('POST', 'http://localhost:8000/express_ajax?a=100&b=200&c=300');
        xhr.open('POST', 'http://localhost:8000/express_ajax');

        // 设置请求头
        // 一般放身份校验的信息
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'); // 预定义头
        xhr.setRequestHeader('name', 'xxxxxx'); // 自定义头，因为浏览器安全机制，会报错

        // 发送
        // xhr.send();  // get
        // xhr.send('a=10&b=20&c=30');  // post 传参
        xhr.send('a:10&b:20&c:30');  // 或者：post 传参

        // 事件绑定，处理服务端返回结果
        // on when 当。。时候
        // readystate 是xhr对象中的属性，表示 0 1 2 3 4
        // 0 未初始化
        // 1 open调用完毕
        // 2 send调用完毕
        // 3 服务器返回部分结果
        // 4 服务器返回全部结果
        // change 改变触发
        xhr.onreadystatechange = function () {
            // 判断（服务端返回了所有结果）
            if (xhr.readyState === 4) {
                // 判断响应状态码 200 404 403 401 500
                // if(xhr.status === 200){
                if (xhr.status >= 200 && xhr.status < 300) {
                    // 处理结果: 行 头 空行 体
                    // 响应行
                    console.log("状态码：", xhr.status);
                    console.log("状态字符串：", xhr.statusText);
                    console.log("所有响应头：", xhr.getAllResponseHeaders());
                    console.log("响应体：", xhr.response);
                    // 设置result
                    result.innerHTML = xhr.response;
                } else {
                    console.log('error!111');
                }
            }
        }
    }
</script>

<hr>
键盘任意输入触发请求
<div id="test2"></div>
<script type="text/javascript">
    const test2 = document.getElementById('test2');
    // 绑定键盘按下
    window.onkeydown = function () {
        console.log("onkeydown");
        const xhr = new XMLHttpRequest();

        // 自动转换 json
        xhr.responseType = 'json';

        xhr.open('GET', 'http://localhost:8000/express_ajax_json');
        xhr.send();
        xhr.onreadystatechange = function () {
            // 判断（服务端返回了所有结果）
            if (xhr.readyState === 4) {
                if (xhr.status >= 200 && xhr.status < 300) {
                    // 设置result
                    // test2.innerHTML = xhr.response;

                    // 手动转换 json 数据
                    // let data = JSON.parse(xhr.response);
                    // console.log(data);
                    // test2.innerHTML = data.name;

                    // 自动转换 responseType = 'json'
                    console.log(xhr.response);
                } else {
                    console.log("error!222");
                }
            }
        }
    }
</script>

<hr>
延时响应
<button>点击请求</button>
<div id="result"></div>
<script type="text/javascript">

    const btn = document.getElementsByTagName('button')[0];
    const result = document.getElementById('result');
    // console.log(btn);

    btn.onclick = function () {
        console.log("点击");
        const xhr = new XMLHttpRequest();
        // 超时设置
        xhr.timeout = 2000;
        // 超时回调
        xhr.ontimeout = function () {
            alert('网络异常，请稍后重试！');
        }
        // 网络异常回调
        xhr.onerror = function () {
            alert('你的网络似乎有些异常！');
        }
        xhr.open('POST', 'http://localhost:8000/timeout');
        xhr.send();
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                if (xhr.status >= 200 && xhr.status < 300) {
                    result.innerHTML = xhr.response;
                } else {
                    console.log('error!111');
                }
            }
        }
    }
</script>

<hr>
发送和取消发送<br>
<button class="test">点击发送</button>
<button class="test">点击取消</button>
<script type="text/javascript">
    const btns = document.getElementsByClassName('test');
    console.log(btn[0]);
    let x = null;
    // 发送
    btns[0].onclick = function () {
        x = new XMLHttpRequest();
        x.open('GET', 'http://localhost:8000/timeout');
        x.send();
    }
    // 取消发送
    btns[1].onclick = function () {
        x.abort();
    }
</script>

<hr>
解决重复发送问题<br>
防止一直请求，然后服务器一直响应相同数据<br>
在第二次相同请求时，取消第一次的发送请求<br>
类似节流阀<br>
<button class="test1">点击发送</button>
<script type="text/javascript">
    const btn1 = document.getElementsByClassName('test1');
    console.log(btn1[0]);
    let x1 = null;
    // 标识变量
    let isSending = false;  // 是否正在发送请求

    btn1[0].onclick = function () {
        if(isSending) x1.abort(); // 如果正在发送，取消上一次
        x1 = new XMLHttpRequest();
        // 更改标识
        isSending = true;
        x1.open('GET', 'http://localhost:8000/timeout');
        x1.send();
        x1.onreadystatechange = function (){
            if(x1.readyState === 4){
                // 修改标识
                isSending = false;
            }
        };
    }
</script>

跨域问题：

顺序不能反

所有协议都可以使用
<!--<script src="../statics/app_sop.js"></script>-->
<!--<script src="http://localhost:8080/statics/app_sop.js"></script>-->
file协议可以使用
<!--<script src="file:///C:/Users/xulon/Desktop/Java_Spring_web/src/main/webapp/statics/app_sop.js"></script>-->

```javascript





## jquery 的 ajax

```javascript
<div cLass="container">
    <h2 cLass="page-header">jQuery发送AJAX请求</h2>
    <button cLass="btn btn-primary">GET</button>
    <button cLass="btn btn-danger">POST</button>
    <button cLass="btn btn-info">通用型方法ajax</button>
</div>
<script>
    $('button').eq(0).click(function () {
        // 普通数据
        $.get('http://localhost:8000/jquery', {a: 100, b: 200}, function (data) {
            console.log(data);  // 字符串
        });

        // json数据
        $.get('http://localhost:8000/jquery', {a: 100, b: 200}, function (data) {
            console.log(data);  // 对象
        }, 'json');
    });

    $('button').eq(1).click(function () {
        $.post('http://localhost:8000/jquery', {a: 10, b: 20}, function (data) {
            console.log(data);
        });
    });

    $('button').eq(2).click(function () {
        $.ajax({
            url: 'http://localhost:8000/jquery',
            // url: 'http://localhost:8000/timeout',
            // 参数
            data: {a: 10, b: 20},
            //请求类型
            type: 'GET',
            // 响应体结果
            dataType: 'json',
            // 成功的回调
            success: function (data) {
                console.log(data);
            },
            // 超时时间
            timeout: 2000,
            // 失败的回调
            error: function () {
                console.log("error!");
            },
            // 头信息，如果自定义需要允许自定义头请求
            headers: {
                c: 300,
                d: 400
            }
        });
    });
</script>

<hr>
jquery 的 jsonp<br>
<button>点击发送</button>
<div id='test1'></div>
<script>
    $('button').eq(1).click(function () {
        $.getJSON('http://localhost:8000/jsonp_jq_login?callback=?', function (data) {
            console.log(data);
            $('#test1').html(`
            名称：${data.name}<br>
            城市：${data.city}
            `)
        })
    })
</script>

<hr>
数据获取<br>
<input type="button" value="获取" id="btn"/>
<div class="main">
    <table id="table">
        <tr>
            <th>申请人省份</th>
            <th>数量</th>
        </tr>
    </table>
    <input type="button" value="PRINT" onclick="printtable()"/>
</div>
<script type="text/javascript">
    $(function () {
        $("#btn").click(function () {
            console.log("获取中。。。")

            $.ajax({
                url: "/statics/data.json",
                type: 'GET',
                dataType: "json",
                success: function (res) {
                    console.log("success1111\n", res);
                    // console.log("success1112:",res.result);
                    // console.log("success1113:",res['result']); // 等同
                    $.each(res['result'], function (index, obj) {
                        $("#table").append("<tr><td>" + obj['申请人省份'] + "</td>" + "<td>" + obj['counts'] + "</td><tr>");
                    });
                },
                error: function (data) {
                    console.log("error!11111", data);
                }
            });

            // 简写 json
            // $.get("/statics/data.json", function (data) {
            //     console.log("success1111\n", data);
            //     // console.log("success1112:",res.result);
            //     // console.log("success1113:",res['result']); // 等同
            //     $.each(data['result'], function (index, obj) {
            //         $("#table").append("<tr><td>" + obj['申请人省份'] + "</td>" + "<td>" + obj['counts'] + "</td><tr>");
            //     })
            // },'json')

            // text
            // $.get("/statics/data.json", function (data) {
            //     // var data1 = JSON.stringify(data); // 失败
            //     var data1 = JSON.parse(data); // 成功
            //     console.log("success1111\n", data1);
            //     // console.log("success1112:",res.result);
            //     // console.log("success1113:",res['result']); // 等同
            //     $.each(data1['result'], function (index, obj) {
            //         $("#table").append("<tr><td>" + obj['申请人省份'] + "</td>" + "<td>" + obj['counts'] + "</td><tr>");
            //     })
            // },'text')
        })
    })
</script>
<script type="text/javascript">
    function printtable() {
        $.ajax({
            url: "/statics/data.json",
            type: 'get',
            datatype: 'text',
            success: function (res) {
                console.log("success2222:", res);  // 在console中查看数据
                $.each(res.result, function (index, obj) {
                    $("#table").append("<tr><td>" + obj['申请人省份'] + "</td>" + "<td>" + obj['counts'] + "</td><tr>");
                });
            },
            error: function (data) {
                console.log("error!22222", data)
            }
        })
    }
</script>

```javascript



## promise 的 ajax

```javascript
// promise 封装实现：
function getJSON(url) {
	  // 创建一个 promise 对象
	  let promise = new Promise(function(resolve, reject) {
		    let xhr = new XMLHttpRequest();
		    // 新建一个 http 请求
		    xhr.open("GET", url, true);
		    // 设置状态的监听函数
		    xhr.onreadystatechange = function() {
			      if (this.readyState !== 4) return;
			      // 当请求成功或失败时，改变 promise 的状态
			      if (this.status === 200) {
				        resolve(this.response);
			      } else {
				        reject(new Error(this.statusText));
			      }
		    };
		    // 设置错误监听函数
		    xhr.onerror = function() {
			      reject(new Error(this.statusText));
		    };
		    // 设置响应的数据类型
		    xhr.responseType = "json";
		    // 设置请求头信息
		    xhr.setRequestHeader("Accept", "application/json");
		    // 发送 http 请求
		    xhr.send(null);
	  });
	  return promise;
}
```javascript