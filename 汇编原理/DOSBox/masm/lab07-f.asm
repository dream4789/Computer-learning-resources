DATA SEGMENT
  SHOW02 DB	'----------INPUT ID(0000) AND GRADE(00)------',0DH,0AH,'$'
  SHOW04 DB	'----------        GRADE SORTING       ------',0DH,0AH,'$'
  
  COUNT  DW 0;用于存学生数
  COUNT1 DW 4,2,1
  COUNT2 DW 10

  
  ;功能2显示
  SHOW2  DB ' ID     GRADE',0DH,0AH,'$'
  
  ;功能1显示
  SHOW3  DB 'PLEASE ENTER THE NUMBER OF STUDENT',0DH,0AH,'$'
  
  SHOW4  DB '     ','$'
  
  ;功能3显示
  SHOW6  DB 'AVRTAGE GRADE:','$'
  DIVISORS DW 1000, 100, 10, 1
  RESULTS  DB 0,0,0,0,'$';存放结果
  CUN      DW 10,10
  ID       DW 100 DUP(?);存学号
  GRADE    DW 100 DUP(?);存成绩
DATA ENDS

STACK SEGMENT STACK'stack'
	DW 100H DUP(?)
  TOP LABEL WORD
STACK ENDS

CODE SEGMENT
    ASSUME CS:CODE,DS:DATA,SS:STACK

;输出字符串
OUT_DX MACRO Y
	LEA DX,Y
	MOV AH,9H
	INT 21H
ENDM

;回车换行
CHANGE_LINE MACRO
	MOV AH,02H
	MOV DL,0DH
	INT 21H
	MOV DL,0AH
	INT 21H
ENDM 


;输入学生数
NUMBER MACRO
  OUT_DX SHOW3 ;显示提示 'PLEASE ENTER THE NUMBER OF STUDENT'
  CALL INPUT
  LEA SI,COUNT
  MOV WORD PTR [SI],BX ;将学生数目存入COUNT 
ENDM


START:
  MOV AX,DATA
  MOV DS,AX
  NUMBER
  OUT_DX SHOW02
  CALL FUNCTION1
  OUT_DX SHOW04
  CALL FUNCTION2
  MOV AH,4CH
  INT 21H



FUNCTION1 PROC NEAR ;选项1，输入学生学号和成绩
	OUT_DX SHOW2;显示表头  ' ID     GRADE',0DH,0AH,'$'
	LEA SI,COUNT
	MOV CX,WORD PTR [SI]
	LEA SI,ID
	LEA DI,GRADE
ONE:
	CALL INPUT1
	MOV WORD PTR [SI],BX;将学号存入ID
	ADD SI,2
	OUT_DX SHOW4 ;'     ','$'
	CALL INPUT2 
	MOV WORD PTR [DI],BX;将成绩存入GRADE
	ADD DI,2
	CHANGE_LINE
	LOOP ONE
	RET 
FUNCTION1 ENDP



FUNCTION2 PROC NEAR;选项3，将学生成绩排序显示
	LEA SI,COUNT
	MOV CX,WORD PTR [SI]
	LEA SI,ID
	LEA DI,GRADE 
	DEC CX
	MOV AX,CX
	MUL COUNT1[2]	
	ADD DI,AX
	ADD SI,AX
RP1:
	PUSH CX
	PUSH SI
	PUSH DI
RP2:
	MOV BX,WORD PTR [DI]
	CMP BX,WORD PTR [DI-2]
	JAE EXCHANGE;后一位大于前一位，跳转下一次比较
	XCHG BX,WORD PTR [DI-2]
	MOV WORD PTR [DI],BX;后一位小于前一位，成绩互相交换位置
	MOV BX,WORD PTR [SI]
	XCHG BX,WORD PTR [SI-2]
	MOV WORD PTR [SI],BX;后一位小于前一位，学号互相交换位置
EXCHANGE:
	SUB SI,2
	SUB DI,2
	LOOP RP2
	POP DI
	POP SI
	POP CX
	LOOP RP1;冒泡排序法，有小到大排序
	
	OUT_DX SHOW2;显示表头
	LEA SI,COUNT
	MOV CX,WORD PTR [SI]
	MOV COUNT1[4],CX
	LEA SI,ID
	LEA DI,GRADE
	MOV CUN[0],DI
THREE:
	MOV AX,WORD PTR [SI]
	ADD SI,2
	PUSH SI
	CALL OUTPUT;输出排序后的学号
	OUT_DX SHOW4
	
	MOV DI,CUN[0]
	MOV AX,WORD PTR [DI]
	ADD DI,2
	PUSH DI
	CALL OUTPUT;输出排序后的成绩
	CHANGE_LINE
	POP DI
	POP SI
	MOV CUN[0],DI
	DEC COUNT1[4]
	CMP COUNT1[4],0
	JA THREE	
RET 
FUNCTION2 ENDP



INPUT PROC NEAR;输入任意位
	MOV BX,0
NUM:
	MOV AH,1    ;输入一位字符至AL
	INT 21H	
	SUB AL,30H  ;将输入数字的ASCII码转换为十进制数字,al-30h
	JL EXIT     ;有符号小于，al<30h，则不是数字，则跳转
	CMP AL,9
	JG EXIT     ;有符号大于，al>9，则不是数字，则跳转
	CBW         ;AL的符号位扩展到AH，AL不变
	XCHG AX,BX  ;交换数据
	MUL COUNT2[0]
	XCHG AX,BX  ;交换数据
  ADD BX,AX
	JMP NUM     ;输入为数字时跳至NUM继续输入
EXIT:
	RET 
INPUT ENDP



INPUT1 PROC NEAR;输入4位
	MOV BX,0
	PUSH COUNT1[0]
NUM1: 
	MOV AH,1;输入一位字符至AL
	INT 21H	
	SUB AL,30H;将输入数字的ASCII码转换为十进制数字
	JL EXIT1 
	CMP AL,9
	JG EXIT1;输入非数字退出
	CBW
	XCHG AX,BX
	MUL COUNT2[0]
	XCHG AX,BX
	ADD BX,AX
	DEC COUNT1[0]
	CMP COUNT1[0],0
	JA NUM1;输入为数字时跳至NUM继续输入
EXIT1:
	POP COUNT1[0]
	RET 
INPUT1 ENDP

INPUT2 PROC NEAR;输入2位
	MOV BX,0
	PUSH COUNT1[2]
NUM2:
	MOV AH,1;输入一位字符至AL
	INT 21H	
	SUB AL,30H;将输入数字的ASCII码转换为十进制数字
	JL EXIT2 
	CMP AL,9
	JG EXIT2;输入非数字退出
	CBW
	XCHG AX,BX
	MUL COUNT2[0]
	XCHG AX,BX
	ADD BX,AX
	DEC COUNT1[2]
	CMP COUNT1[2],0
	JA NUM2;输入为数字时跳至NUM继续输入
EXIT2:
	POP COUNT1[2]
	RET 
INPUT2 ENDP
 
OUTPUT PROC NEAR;输出程序
	MOV SI, OFFSET DIVISORS
	MOV DI, OFFSET RESULTS
	MOV CX,4 
CAL:
	MOV DX,0 
	DIV WORD PTR [SI];AX除1000,AX为商，DX为余数
	ADD AL,30H;将数字转换为ASCII码
	MOV BYTE PTR [DI],AL;将运算结果从高位到低位依次存入results 
	INC DI 
	ADD SI,2 
	MOV AX,DX;将余数DX附给AX
	LOOP CAL
	MOV CX,3;循环4次，如果前四位均为0，则将第五位输出
	MOV DI, OFFSET RESULTS
NZ:
	CMP BYTE PTR [DI],'0' 
	JNE PRINT;结果大为0时跳入输出程序print
	INC DI 
	LOOP NZ
PRINT:
	MOV DX,DI
	MOV AH,9
	INT 21H
	RET
OUTPUT ENDP

CODE ENDS
END START
